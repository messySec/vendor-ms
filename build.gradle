plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id "com.netflix.dgs.codegen" version '6.1.4'
}
apply plugin: 'com.netflix.dgs.codegen'

group = 'com.github.Hugornda'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('netflixDgsVersion', "9.0.4")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter'
	implementation 'jakarta.servlet:jakarta.servlet-api'
	implementation 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'io.r2dbc:r2dbc-h2'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.netflix.graphql.dgs:graphql-dgs-client'
	testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:${netflixDgsVersion}"
	}
}

generateJava{
	schemaPaths = ["${projectDir}/src/main/resources/schema"]
	packageName = 'com.github.Hugornda'
	generateClient = true
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
	test {
		resources {
			srcDirs = ['src/test/resources']
		}
	}
}
